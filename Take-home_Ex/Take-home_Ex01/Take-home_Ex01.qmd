---
title: "Take Home Exercise 1"
subtitle: Visual Anlytics of Demographics and Financial Characteristics of the Residents in the City of Engagement to Aid Revitalization Grant Allocation
format: 
  html: 
    code-fold: true
    code-summary: "Show the code"
author: "Fangxian"
execute: 
  eval: true
  warning: false
date: "14 May 2023"
date-modified: "`r Sys.Date()`"
---

# Background and Task

City of Engagement, with a total population of 50,000, is a small city located at Country of Nowhere. The city serves as a service centre of an agriculture region surrounding the city. The main agriculture of the region is fruit farms and vineyards. The local council of the city is in the process of preparing the Local Plan 2023. A sample survey of 1000 representative residents had been conducted to collect data related to their household demographic and spending patterns, among other things. The city aims to use the data to assist with their major community revitalization efforts, including how to allocate a very large city renewal grant they have recently received.

The following analysis on the sample survey to reveal the demographic and financial characteristics of the city of Engagement by using appropriate **static and interactive statistical graphics** methods. This analysis will be showing user-friendly and interactive solution that helps city managers and planners to explore the complex data in an engaging way and reveal hidden patterns.

# Data Preparation

## Load Packages

The code chunk below uses `pacman::p_load()` to check if packages are installed. If they are, they will be launched into R. The packages installed are

-   `tidyverse`: A collection of core packages designed for data science, used extensively for data preparation and wrangling.

-   `ggplot2`: Used for plotting different types of graphs.

-   `plotly`: Used for creating interactive web-based graphs.

-   `ggdist`: Used for visualising distribution and uncertainty.

-   `ggridges`: a `ggplot2` extension specially designed for plotting ridgeline plots.

-   `ggthemes`: Provide additional themes for `ggplot2` .

-   `ggstatsplot`: Used for creating graphics with details from statistical tests.

-   `pacthwork`: Used to combine plots.

-   `ggrepel`: ggrepel provides geoms for `ggplot2` to repel overlapping text labels.

    All packages can be found within CRAN.

```{r}
pacman::p_load(tidyverse, ggplot2,plotly, ggdist, ggridges, ggthemes, colorspace, ggstatsplot, patchwork, ggrepel)
```

## Data importing and wraggling

Import and check the columns in the Participant dataset.

```{r}
Participants <- read_csv("data/participants.csv") %>%
  mutate_if(is.character, as.factor)

glimpse(Participants)
```

Group the participants into 9 different Age Groups for easier analysis later.

```{r}
Participants$age_group <- cut(Participants$age,
                              breaks = c(-Inf,21, 26, 31, 36, 41, 46, 51, 56, Inf),
                              labels = c("<20", "21-25", "26-30","31-35", "36-40", 
                                             "41-45", "46-50","51-55", "56-60"),
                              right = FALSE)

Participants$age <- NULL
```

Import and read the FinancialJournal Dataset, extract out Category to the columns.

```{r}
FinancialJournal <- read_csv("data/FinancialJournal.csv") %>%
  mutate_if(is.character, as.factor)

Fin_by_cat <- FinancialJournal %>%
  mutate(date = as.Date(timestamp)) %>%
  group_by(participantId, category, timestamp) %>%
  summarize(amount = sum(amount)) %>%
  pivot_wider(names_from = category, values_from = amount)
```

Extract the month_year out of timestamp.

```{r}
Fin_split_ym <- Fin_by_cat %>%  
    mutate(
    Date = as.Date(timestamp),
    Month_Yr = format(Date, "%Y-%m")) 
```

As some participants have rent adjustment, new column is created, AdjustedShelter, to see the actual expense on shelter. Summarized the expenses by categories and group by Month_Yr, included two columns of Total Expense and Total Savings for later use.

```{r}
Fin_summ <- Fin_split_ym %>% 
  group_by(participantId, Month_Yr) %>% 
  summarize(
    Education = sum(Education, na.rm = TRUE),
    Food = sum(Food, na.rm = TRUE),
    Recreation = sum(Recreation, na.rm = TRUE),
    Shelter = sum(Shelter, na.rm = TRUE),
    Wage = sum(Wage, na.rm = TRUE),
    RentAdjustment = sum(RentAdjustment, na.rm = TRUE),
  ) %>% 
  ungroup()%>%
  mutate(
    AdjustedShelter = Shelter + RentAdjustment,
    TotalExpense = Food + Recreation + AdjustedShelter + Education,
    TotalSavings = Wage + TotalExpense)

Fin_summ$Education <- abs(Fin_summ$Education)
Fin_summ$Food <- abs(Fin_summ$Food)
Fin_summ$Recreation <- abs(Fin_summ$Recreation)
Fin_summ$AdjustedShelter <- abs(Fin_summ$AdjustedShelter)
Fin_summ$TotalExpense <- abs(Fin_summ$TotalExpense)


```

Join the two tables and remove the irrelevant columns for analysis and visualization later.

```{r}
Fin_byparticipant <- Fin_summ %>%
  group_by(participantId) %>%
  summarize(
    Education = sum(Education, na.rm = TRUE),
    Food = sum(Food, na.rm = TRUE),
    Recreation = sum(Recreation, na.rm = TRUE),
    Wage = sum(Wage, na.rm = TRUE),
    AdjustedShelter = sum(AdjustedShelter, na.rm = TRUE),
    TotalExpense = sum (TotalExpense, na.rm = TRUE),
    TotalSavings = sum(TotalSavings, na.rm = TRUE)
  ) 

Merged_table <- Fin_byparticipant %>%
  inner_join(Participants, by = "participantId")

```

Check for any missing values.

```{r}
#| echo: True
any(is.na(Merged_table))
```

Summary of the statistics of the merged_table

```{r}
psych::describe(Merged_table)
```

There are some high range in the TotalExpense, this is an important parameter to note, as the grant would likely to be used in the area where the citizens are spending at to make them happier. We plot the graph below to understand more on the overall spending pattern.

```{r}
ggplot(data=Merged_table, 
       aes(x= TotalExpense, 
           y= joviality)) +
  geom_point()    
```

From the above graph, we can see that there are a group of sample have abnormally low spending and their happiness does not seem to matter on the amount they spend. These are the outliers in the sample that we should exclude from the analysis as it will affect the accuracy how we are determining the tangible spending that makes the citizens happy. Below code are performed to removed these outliers and check the graph again after the removal.

```{r}
TotalExpense_lower <- quantile(Merged_table$TotalExpense, 0.13)

Merged_table_filtered <- Merged_table %>%
  filter(TotalExpense >= TotalExpense_lower)

ggplot(data=Merged_table_filtered, 
       aes(x= TotalExpense, 
           y= joviality)) +
  geom_point() 
```

# Visualization

Now the data is ready, we would like to find out, how each factors could affect the happiness for the citizens.

## Normality Assumption Check

To check is joviality of the sample are normally distributed, we plotted the below bar chart and density graph to understand.

```{r}
p1 <- ggplot(data=Merged_table_filtered, 
       aes(x= joviality)) +
    geom_histogram(bins=20,            
                 color="black",      
                 fill="light blue")

p2 <- ggplot(data=Merged_table_filtered, 
       aes(x= joviality)) +
    geom_density()

p1+p2
```

We can see from the above group that, joviality scores are not normally distributed in this sample.

## Two-Sample Test

Since joviality is not normally distributed, we use [*ggbetweenstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html) to understand if having kids have an impact on people's happiness. Non-parametric test (Mann-Whitney U test) was carried out for the below hyphothesis.

-   H0: There is no difference between average joviality score of people have kids.

-   H1: There is difference between average joviality score of people have kids.

```{r}
ggbetweenstats(
  data = Merged_table_filtered,
  x = haveKids, 
  y = joviality,
  type = "np",
  messages = FALSE
)
```

Since, p-value is greater than 0.05, we conclude that there is no difference between between average joviality score of people have kids.

## One-Way ANOVA Test

As other categorical parameters have more than 2 groups, we use One-Way ANOVA test for the following hypothesis.

-   H0: There is no difference among average joviality score of people of different educational levels.

-   H1: There is difference among average joviality score of people of different educational levels.

```{r}
ggbetweenstats(
  data = Merged_table_filtered,
  x = educationLevel, 
  y = joviality,
  type = "np",
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE
)
  
```

Since, p-value is less than 0.05, we conclude that there is difference among average joviality score of people of different educational levels. We repeat the same test for the other parameters, i.e. household sizes, age groups, and conclude that these 3 parameters did not have significant statistical significance in affecting the citizen's joviality score.

```{r}
p3 <- ggbetweenstats(
  data = Merged_table_filtered,
  x = householdSize, 
  y = joviality,
  type = "np",
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE
)

p4 <- ggbetweenstats(
  data = Merged_table_filtered,
  x = age_group, 
  y = joviality,
  type = "np",
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE
)

p5 <- ggbetweenstats(
  data = Merged_table_filtered,
  x = interestGroup, 
  y = joviality,
  type = "np",
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE
)

p3|(p4/p5)
```

We would like to look into more on the joviality score is distributed among people of different education levels and we run the code chunk below.

```{r}
ggplot(Merged_table_filtered, 
       aes(x = educationLevel, 
           y = joviality)) +
  stat_halfeye(adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA) +
  geom_boxplot(width = .20,
               outlier.shape = NA) +
    stat_summary(geom = "point",
               fun="mean",
               colour ="red",
               size=2) +
  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = "label_repel", size=3, angle=150)+
  coord_flip() +
  theme_economist()
```

**Insight:**

1.  People of Low education level, has lower average joviality score than the rest, its median is also much lower and far from its average point due to a large number of them have low scores as shown by the higher ridge.

2.  Graduates have the highest joviality score, followed by Bachelors and High School or College graduates.

3.  Compared to the Graduates and Bachelors, there is also a large amount of High School or College graduates are of lower joviality score.

## Correlation Matrix

Now we want to look at the continuous variables to understand how educational levels could play a part in affecting joviality score.

From the Correlogram below, we have a few observations below,

1.  There are a few pairs with high collinearity: TotalSavings-Wage, TotalExpense-AdjustedShelter, TotalExpense-Recreation. Hence, we will only consider Wage, AdjustedShelter and Recreation for the analysis below.
2.  Joviality Score has linear relationships with Wage received, Recreation, Food and Housing Expenses

```{r}
ggstatsplot::ggcorrmat(
  data = Merged_table_filtered,
  cor.vars = c(2:8,13),
    ggcorrplot.args = list(outline.color = "black", 
                         hc.order = TRUE,
                         tl.cex = 10),
  title    = "Correlogram for Merged_table2 dataset",
  subtitle = "Three pairs are no significant at p < 0.05"
    )
```

```{r}
p6 <- ggplot(data=Merged_table_filtered, 
       aes(y = Recreation, x= educationLevel)) +
  geom_boxplot() +
  stat_summary(geom = "point",
               fun="mean",
               colour ="red",
               size=2) +
  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = "label_repel", size=3, angle=150) +
  labs(y= 'Recreation Expense', x= 'Educational Level',
       title = "Distribution of Recreation Expense by Education Level") +
  theme(axis.title.y= element_text(angle=90), axis.ticks.x= element_blank(),
        axis.line= element_line(color= 'grey'))

p7 <- ggplot(data=Merged_table_filtered, 
       aes(y = Food, x= educationLevel)) +
  geom_boxplot() +
  stat_summary(geom = "point",
               fun="mean",
               colour ="red",
               size=2) +
  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = "label_repel", size=3, angle=150) +
  labs(y= 'Food Expense', x= 'Educational Level',
       title = "Distribution of Food Expense by Education Level") +
  theme(axis.title.y= element_text(angle=90), axis.ticks.x= element_blank(),
        axis.line= element_line(color= 'grey'))

p8 <- ggplot(data=Merged_table_filtered, 
       aes(y = AdjustedShelter, x= educationLevel)) +
  geom_boxplot() +
  stat_summary(geom = "point",
               fun="mean",
               colour ="red",
               size=2) +
  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = "label_repel", size=3, angle=150) +
  labs(y= 'Housing Expense', x= 'Educational Level',
       title = "Distribution of Housing Expense by Educational Level") +
  theme(axis.title.y= element_text(angle=90), axis.ticks.x= element_blank(),
        axis.line= element_line(color= 'grey'))

p9 <- ggplot(data=Merged_table_filtered, 
       aes(y = Wage, x= educationLevel)) +
  geom_boxplot() +
  stat_summary(geom = "point",
               fun="mean",
               colour ="red",
               size=2) +
  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = "label_repel", size=3, angle=150) +
  labs(y= 'Wage Received', x= 'Educational Level',
       title = "Distribution of Wage by Educational Level") +
  theme(axis.title.y= element_text(angle=90), axis.ticks.x= element_blank(),
        axis.line= element_line(color= 'grey'))

(p6/p7)|(p8/p9)
```

From the boxplots above, we can observe

1.   Recreational spending is about the same across all educational levels.

2.  Housing spending is lower for Low and High School or Colleague graduates. Bachelors and Graduates spend similarly.

3.  Food expense have a wide disparity across educational groups for their mean and median values. For people of low education level, the upper quartile is much lower than the remaining groups

4.  Graduates have much higher average and median higher wage than the rest of the groups, followed by Bachelors. Low and High School or Colleague graduates have much lower wages.

## Interactive Visualization

Below interactive graphs, we can explore how each spending and wage are correlated with joviality scores by educational levels.

```{r}
plot_ly(data = Merged_table_filtered, 
        x = ~joviality, 
        y = ~Recreation, 
        color = ~ educationLevel)
```

```{r}
plot_ly(data = Merged_table_filtered, 
        x = ~joviality, 
        y = ~Food, 
        color = ~educationLevel)
```

```{r}
plot_ly(data = Merged_table_filtered, 
        x = ~joviality, 
        y = ~AdjustedShelter, 
        color = ~educationLevel)
```

```{r}
plot_ly(data = Merged_table_filtered, 
        x = ~joviality, 
        y = ~Wage, 
        color = ~educationLevel)
```

## Visualizing the uncertainty of point estimates

```{r}
Merged_table_filtered %>%
  ggplot(aes(x = educationLevel, 
             y = joviality)) +
  stat_pointinterval(
    aes(interval_color = stat(level)),
    .width = c(0.95,0.99
               ),
    .point = median,
    .interval = qi,
    point_color = "darkred",
    show.legend = FALSE) +
  labs(
    title = "Visualising confidence intervals of median joviality score",
    subtitle = "Median Point + Multiple-interval plot")
```

## Other Interesting Observations

```{r}
ggplot(data=Merged_table_filtered, 
       aes(y = joviality, x= interestGroup)) +
  geom_boxplot() +
  stat_summary(geom = "point",
               fun="mean",
               colour ="red",
               size=2) +
  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = "label_repel", size=3, angle=150) +
  labs(y= 'Joviality', x= 'Age Group',
       title = "Distribution of Joviality across Age Groups by Kids Status") +
  theme(axis.title.y= element_text(angle=0), axis.ticks.x= element_blank(),
        axis.line= element_line(color= 'grey'))
```

```{r}
ggplot(data=Merged_table_filtered, 
       aes(y = joviality, x= interestGroup)) +
  geom_boxplot() +
  stat_summary(geom = "point",
               fun="mean",
               colour ="red",
               size=2) +
  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = "label_repel", size=3, angle=150) +
  facet_grid(haveKids ~.) +
  labs(y= 'Joviality', x= 'Age Group',
       title = "Distribution of Joviality across Age Groups by Kids Status") +
  theme(axis.title.y= element_text(angle=0), axis.ticks.x= element_blank(),
        axis.line= element_line(color= 'grey'))
```

# Recommendation
