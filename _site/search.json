[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hand-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman pacakge to check if tidyverse packages are installed in the comupter. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "title": "Hand-on Exercise 1",
    "section": "Plotting a simple bar chart",
    "text": "Plotting a simple bar chart\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()\n\n\n\n\n\nModifying a geometric object by changing geom()\n\nggplot(data=exam_data,\n       aes(x= MATHS)) +\n  geom_histogram(bins = 20,\n                 color=\"black\",\n                 fill= \"light blue\")\n\n\n\n\n\n\nModifying a geometric object by changing aes()\n\nggplot(data=exam_data,\n       aes(x= MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins=20,\n                 color=\"grey30\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_density",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_density",
    "title": "Hand-on Exercise 1",
    "section": "Geometric Objects: geom_density()",
    "text": "Geometric Objects: geom_density()\nThis is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()        \n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Hand-on Exercise 1",
    "section": "Geometric Objects: geom_boxplot",
    "text": "Geometric Objects: geom_boxplot\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\nAdding in notches\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "title": "Hand-on Exercise 1",
    "section": "Geometric Objects: geom_violin",
    "text": "Geometric Objects: geom_violin\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "title": "Hand-on Exercise 1",
    "section": "Geometric Objects: geom_point()",
    "text": "Geometric Objects: geom_point()\nThis is useful for creating scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "title": "Hand-on Exercise 1",
    "section": "geom objects can be combined",
    "text": "geom objects can be combined\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Hand-on Exercise 1",
    "section": "Working with stat - the stat_summary() method",
    "text": "Working with stat - the stat_summary() method\nbelow code showing mean in red dots.\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4) \n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "title": "Hand-on Exercise 1",
    "section": "Working with stat - the geom() method",
    "text": "Working with stat - the geom() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)  \n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"red\", :\nIgnoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Hand-on Exercise 1",
    "section": "Adding a best fit curve on a scatterplot",
    "text": "Adding a best fit curve on a scatterplot\nusing geom_smooth(size=0.5)\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nThe default smoothing method (default is loess) can be overridden as shown below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "title": "Hand-on Exercise 1",
    "section": "Working with facet_wrap()",
    "text": "Working with facet_wrap()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-on_Ex02",
    "section": "Working with ggrepel",
    "text": "Working with ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-Class Exercise 4",
    "section": "",
    "text": "Getting Started\n\npacman::p_load(rstatix, gt, patchwork, tidyverse)\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\nVisualising Normal Distribution\nIf the data is normally distributed, the points in a Q-Q plot will lie on a straight diagonal line. Conversely, if the points deviate significantly from the straight diagonal line, then it’s likes likely that the data is normally distributed.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample=ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n::: callout - Note Note: We can see that the points deviate significantly from the straight diagonal line. This is a clear indication that the set of data is not normally distributed. :::\n\n\nCombining satistical graph and analysis table\nNeed to install webshot\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nqq <- ggplot(exam_data,\n       aes(sample=ENGLISH)) +\n    stat_qq() +\n    stat_qq_line()\n\nsw_t <- exam_data %>%\n  shapiro_test(ENGLISH) %>%\n  gt()\n\n#converting the image into a temp file\ntmp <- tempfile(fileext = '.png')\ngtsave(sw_t,tmp)\ntable_png <- png::readPNG(tmp, native = TRUE)\n\nqq + table_png"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Application. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "City of Engagement, with a total population of 50,000, is a small city located at Country of Nowhere. The city serves as a service centre of an agriculture region surrounding the city. The main agriculture of the region is fruit farms and vineyards. The local council of the city is in the process of preparing the Local Plan 2023. A sample survey of 1000 representative residents had been conducted to collect data related to their household demographic and spending patterns, among other things. The city aims to use the data to assist with their major community revitalization efforts, including how to allocate a very large city renewal grant they have recently received.\nThe following analysis on the sample survey to reveal the demographic and financial characteristics of the city of Engagement byusing appropriate static and interactive statistical graphics methods. This analysis will be showing user-friendly and interactive solution that helps city managers and planners to explore the complex data in an engaging way and reveal hidden patterns."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-packages",
    "title": "Take Home Exercise 1",
    "section": "Load Packages",
    "text": "Load Packages\n\n\nShow the code\npacman::p_load(ggstatsplot, ggthemes, plotly, corrplot, lubridate, ggpubr, plotly, treemap, d3treeR, hrbrthemes, ggrepel, RColorBrewer, gganimate, viridis, ggridges, ggrepel, testthat, hmisc, tidyverse)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-importing-and-wraggling",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-importing-and-wraggling",
    "title": "Take Home Exercise 1",
    "section": "Data importing and wraggling",
    "text": "Data importing and wraggling\nImport and check the columns in the participant dataset.\n\n\nShow the code\nParticipants <- read_csv(\"data/participants.csv\") %>%\n  mutate_if(is.character, as.factor)\n\nhead(Participants)\n\n\n# A tibble: 6 × 7\n  participantId householdSize haveKids   age educationLevel      interestGroup\n          <dbl>         <dbl> <lgl>    <dbl> <fct>               <fct>        \n1             0             3 TRUE        36 HighSchoolOrCollege H            \n2             1             3 TRUE        25 HighSchoolOrCollege B            \n3             2             3 TRUE        35 HighSchoolOrCollege A            \n4             3             3 TRUE        21 HighSchoolOrCollege I            \n5             4             3 TRUE        43 Bachelors           H            \n6             5             3 TRUE        32 HighSchoolOrCollege D            \n# ℹ 1 more variable: joviality <dbl>\n\n\nImport and read the FinancialJournal Dataset, extract out Category to match the participants to be columns.\n\n\nShow the code\nFinancialJournal <- read_csv(\"data/FinancialJournal.csv\") %>%\n  mutate_if(is.character, as.factor)\n\nFin_by_cat <- FinancialJournal %>%\n  mutate(date = as.Date(timestamp)) %>%\n  group_by(participantId, category, timestamp) %>%\n  summarize(amount = sum(amount)) %>%\n  pivot_wider(names_from = category, values_from = amount)\n\n\nExtract the month_year out of timestamp.\n\n\nShow the code\nFin_split_ym <- Fin_by_cat %>%  \n    mutate(\n    Date = as.Date(timestamp),\n    Month_Yr = format(Date, \"%Y-%m\")) \n\n\nAs some participants have rent adjustment, new column is created, AdjustedShelter, to see the actual expense on shelter. Summarized the expenses by categories and group by Month_Yr, included two columns of Total Expense and Total Savings for later use.\n\n\nShow the code\nFin_summ <- Fin_split_ym %>% \n  group_by(participantId, Month_Yr) %>% \n  summarize(\n    Education = sum(Education, na.rm = TRUE),\n    Food = sum(Food, na.rm = TRUE),\n    Recreation = sum(Recreation, na.rm = TRUE),\n    Shelter = sum(Shelter, na.rm = TRUE),\n    Wage = sum(Wage, na.rm = TRUE),\n    RentAdjustment = sum(RentAdjustment, na.rm = TRUE),\n    Count = n()\n  ) %>% \n  ungroup()%>%\n  mutate(\n    AdjustedShelter = Shelter + RentAdjustment,\n    TotalExpense = Food + Recreation + AdjustedShelter + Education,\n    TotalSavings = Wage + TotalExpense)\n\n\nJoin the two tables and remove the irrelevant columns for analysis and visualization later.\n\n\nShow the code\n#Joined \nMerged_table <- Fin_summ %>%\n  left_join(Participants, by = \"participantId\")\n\nMerged_table$RentAdjustment <- NULL\nMerged_table$Shelter <- NULL\nMerged_table$Count <- NULL\n\n\n\n\nShow the code\npsych::describe(Merged_table)\n\n\n                vars     n     mean      sd   median  trimmed     mad      min\nparticipantId      1 10691   483.30  294.17   466.00   477.84  370.65     0.00\nMonth_Yr*          2 10691     6.43    3.48     6.00     6.43    4.45     1.00\nEducation          3 10691   -14.44   29.89     0.00    -6.63    0.00  -182.29\nFood               4 10691  -346.41   85.25  -308.58  -342.51   67.67  -590.42\nRecreation         5 10691  -387.55  249.97  -377.40  -373.71  201.59 -1962.10\nWage               6 10691  4265.05 2436.30  3613.88  3867.84 1786.00  1600.00\nAdjustedShelter    7 10691  -678.34  302.40  -668.99  -645.24  236.68 -3112.71\nTotalExpense       8 10691 -1426.74  518.11 -1402.26 -1399.42  386.64 -4894.27\nTotalSavings       9 10691  2838.31 2426.81  2268.65  2442.49 1824.90  -362.70\nhouseholdSize     10 10691     1.90    0.81     2.00     1.88    1.48     1.00\nhaveKids          11 10691      NaN      NA       NA      NaN      NA      Inf\nage               12 10691    39.13   12.39    39.00    39.18   16.31    18.00\neducationLevel*   13 10691     2.35    0.94     3.00     2.36    1.48     1.00\ninterestGroup*    14 10691     5.59    2.90     6.00     5.61    4.45     1.00\njoviality         15 10691     0.47    0.29     0.45     0.46    0.35     0.00\n                     max    range  skew kurtosis    se\nparticipantId    1010.00  1010.00  0.13    -1.17  2.85\nMonth_Yr*          12.00    11.00  0.01    -1.23  0.03\nEducation           0.00   182.29 -2.51     7.00  0.29\nFood              -32.00   558.42 -0.13     0.41  0.82\nRecreation          0.00  1962.10 -0.90     2.50  2.42\nWage            21334.65 19734.65  1.95     5.24 23.56\nAdjustedShelter     0.00  3112.71 -1.50     5.11  2.92\nTotalExpense      -32.00  4862.28 -0.98     3.46  5.01\nTotalSavings    19161.58 19524.28  1.96     5.27 23.47\nhouseholdSize       3.00     2.00  0.18    -1.44  0.01\nhaveKids            -Inf     -Inf    NA       NA    NA\nage                60.00    42.00 -0.02    -1.21  0.12\neducationLevel*     4.00     3.00 -0.28    -1.14  0.01\ninterestGroup*     10.00     9.00 -0.05    -1.24  0.03\njoviality           1.00     1.00  0.21    -1.15  0.00"
  }
]