[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hand-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman pacakge to check if tidyverse packages are installed in the comupter. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "title": "Hand-on Exercise 1",
    "section": "Plotting a simple bar chart",
    "text": "Plotting a simple bar chart\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()\n\n\n\n\n\nModifying a geometric object by changing geom()\n\nggplot(data=exam_data,\n       aes(x= MATHS)) +\n  geom_histogram(bins = 20,\n                 color=\"black\",\n                 fill= \"light blue\")\n\n\n\n\n\n\nModifying a geometric object by changing aes()\n\nggplot(data=exam_data,\n       aes(x= MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins=20,\n                 color=\"grey30\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_density",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_density",
    "title": "Hand-on Exercise 1",
    "section": "Geometric Objects: geom_density()",
    "text": "Geometric Objects: geom_density()\nThis is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()        \n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Hand-on Exercise 1",
    "section": "Geometric Objects: geom_boxplot",
    "text": "Geometric Objects: geom_boxplot\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\nAdding in notches\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "title": "Hand-on Exercise 1",
    "section": "Geometric Objects: geom_violin",
    "text": "Geometric Objects: geom_violin\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "title": "Hand-on Exercise 1",
    "section": "Geometric Objects: geom_point()",
    "text": "Geometric Objects: geom_point()\nThis is useful for creating scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "title": "Hand-on Exercise 1",
    "section": "geom objects can be combined",
    "text": "geom objects can be combined\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Hand-on Exercise 1",
    "section": "Working with stat - the stat_summary() method",
    "text": "Working with stat - the stat_summary() method\nbelow code showing mean in red dots.\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4) \n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "title": "Hand-on Exercise 1",
    "section": "Working with stat - the geom() method",
    "text": "Working with stat - the geom() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)  \n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"red\", :\nIgnoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Hand-on Exercise 1",
    "section": "Adding a best fit curve on a scatterplot",
    "text": "Adding a best fit curve on a scatterplot\nusing geom_smooth(size=0.5)\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nThe default smoothing method (default is loess) can be overridden as shown below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "title": "Hand-on Exercise 1",
    "section": "Working with facet_wrap()",
    "text": "Working with facet_wrap()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-on_Ex02",
    "section": "Working with ggrepel",
    "text": "Working with ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-Class Exercise 4",
    "section": "",
    "text": "Getting Started\n\npacman::p_load(rstatix, gt, patchwork, tidyverse)\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\nVisualising Normal Distribution\nIf the data is normally distributed, the points in a Q-Q plot will lie on a straight diagonal line. Conversely, if the points deviate significantly from the straight diagonal line, then it’s likes likely that the data is normally distributed.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample=ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n::: callout - Note Note: We can see that the points deviate significantly from the straight diagonal line. This is a clear indication that the set of data is not normally distributed. :::\n\n\nCombining satistical graph and analysis table\nNeed to install webshot\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nqq <- ggplot(exam_data,\n       aes(sample=ENGLISH)) +\n    stat_qq() +\n    stat_qq_line()\n\nsw_t <- exam_data %>%\n  shapiro_test(ENGLISH) %>%\n  gt()\n\n#converting the image into a temp file\ntmp <- tempfile(fileext = '.png')\ngtsave(sw_t,tmp)\ntable_png <- png::readPNG(tmp, native = TRUE)\n\nqq + table_png"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Application. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "City of Engagement, with a total population of 50,000, is a small city located at Country of Nowhere. The city serves as a service centre of an agriculture region surrounding the city. The main agriculture of the region is fruit farms and vineyards. The local council of the city is in the process of preparing the Local Plan 2023. A sample survey of 1000 representative residents had been conducted to collect data related to their household demographic and spending patterns, among other things. The city aims to use the data to assist with their major community revitalization efforts, including how to allocate a very large city renewal grant they have recently received.\nThe following analysis on the sample survey to reveal the demographic and financial characteristics of the city of Engagement by using appropriate static and interactive statistical graphics methods. This analysis will be showing user-friendly and interactive solution that helps city managers and planners to explore the complex data in an engaging way and reveal hidden patterns."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-packages",
    "title": "Take Home Exercise 1",
    "section": "Load Packages",
    "text": "Load Packages\n\n\nShow the code\npacman::p_load(tidyverse, ggplot2,plotly, ggdist, ggridges, ggthemes, colorspace, ggstatsplot, patchwork, ggrepel)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-importing-and-wraggling",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-importing-and-wraggling",
    "title": "Take Home Exercise 1",
    "section": "Data importing and wraggling",
    "text": "Data importing and wraggling\nImport and check the columns in the participant dataset.\n\n\nShow the code\nParticipants <- read_csv(\"data/participants.csv\") %>%\n  mutate_if(is.character, as.factor)\n\nglimpse(Participants)\n\n\nRows: 1,011\nColumns: 7\n$ participantId  <dbl> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ householdSize  <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ haveKids       <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, T…\n$ age            <dbl> 36, 25, 35, 21, 43, 32, 26, 27, 20, 35, 48, 27, 34, 18,…\n$ educationLevel <fct> HighSchoolOrCollege, HighSchoolOrCollege, HighSchoolOrC…\n$ interestGroup  <fct> H, B, A, I, H, D, I, A, G, D, D, F, D, J, H, I, J, I, I…\n$ joviality      <dbl> 0.001626703, 0.328086500, 0.393469590, 0.138063446, 0.8…\n\n\n\n\nShow the code\nParticipants$age_group <- cut(Participants$age,\n                              breaks = c(-Inf,21, 26, 31, 36, 41, 46, 51, 56, Inf),\n                              labels = c(\"<20\", \"21-25\", \"26-30\",\"31-35\", \"36-40\", \n                                             \"41-45\", \"46-50\",\"51-55\", \"56-60\"),\n                              right = FALSE)\n\nParticipants$age <- NULL\n\n\nImport and read the FinancialJournal Dataset, extract out Category to match the participants to be columns.\n\n\nShow the code\nFinancialJournal <- read_csv(\"data/FinancialJournal.csv\") %>%\n  mutate_if(is.character, as.factor)\n\nFin_by_cat <- FinancialJournal %>%\n  mutate(date = as.Date(timestamp)) %>%\n  group_by(participantId, category, timestamp) %>%\n  summarize(amount = sum(amount)) %>%\n  pivot_wider(names_from = category, values_from = amount)\n\n\nExtract the month_year out of timestamp.\n\n\nShow the code\nFin_split_ym <- Fin_by_cat %>%  \n    mutate(\n    Date = as.Date(timestamp),\n    Month_Yr = format(Date, \"%Y-%m\")) \n\n\nAs some participants have rent adjustment, new column is created, AdjustedShelter, to see the actual expense on shelter. Summarized the expenses by categories and group by Month_Yr, included two columns of Total Expense and Total Savings for later use.\n\n\nShow the code\nFin_summ <- Fin_split_ym %>% \n  group_by(participantId, Month_Yr) %>% \n  summarize(\n    Education = sum(Education, na.rm = TRUE),\n    Food = sum(Food, na.rm = TRUE),\n    Recreation = sum(Recreation, na.rm = TRUE),\n    Shelter = sum(Shelter, na.rm = TRUE),\n    Wage = sum(Wage, na.rm = TRUE),\n    RentAdjustment = sum(RentAdjustment, na.rm = TRUE),\n  ) %>% \n  ungroup()%>%\n  mutate(\n    AdjustedShelter = Shelter + RentAdjustment,\n    TotalExpense = Food + Recreation + AdjustedShelter + Education,\n    TotalSavings = Wage + TotalExpense)\n\nFin_summ$Education <- abs(Fin_summ$Education)\nFin_summ$Food <- abs(Fin_summ$Food)\nFin_summ$Recreation <- abs(Fin_summ$Recreation)\nFin_summ$AdjustedShelter <- abs(Fin_summ$AdjustedShelter)\nFin_summ$TotalExpense <- abs(Fin_summ$TotalExpense)\n\n\nJoin the two tables and remove the irrelevant columns for analysis and visualization later.\n\n\nShow the code\nFin_byparticipant <- Fin_summ %>%\n  group_by(participantId) %>%\n  summarize(\n    Education = sum(Education, na.rm = TRUE),\n    Food = sum(Food, na.rm = TRUE),\n    Recreation = sum(Recreation, na.rm = TRUE),\n    Wage = sum(Wage, na.rm = TRUE),\n    AdjustedShelter = sum(AdjustedShelter, na.rm = TRUE),\n    TotalExpense = sum (TotalExpense, na.rm = TRUE),\n    TotalSavings = sum(TotalSavings, na.rm = TRUE)\n  ) \n\nMerged_table <- Fin_byparticipant %>%\n  inner_join(Participants, by = \"participantId\")\n\n\nCheck for any missing values.\n\n\nShow the code\nany(is.na(Merged_table))\n\n\n[1] FALSE\n\n\nSummary of the statistics of the merged_table\n\n\nShow the code\npsych::describe(Merged_table)\n\n\n                vars    n     mean       sd   median  trimmed      mad     min\nparticipantId      1 1011   505.00   291.99   505.00   505.00   375.10    0.00\nEducation          2 1011   152.69   316.73     0.00    68.07     0.00    0.00\nFood               3 1011  3663.13  1644.70  3586.59  3846.71   894.82   32.00\nRecreation         4 1011  4098.26  2602.62  4568.99  4114.17  2408.58    0.00\nWage               5 1011 45101.56 30567.82 40996.93 42117.39 22049.97 2098.36\nAdjustedShelter    6 1011  7173.23  3782.25  7845.02  7336.09  3554.77    0.00\nTotalExpense       7 1011 15087.30  7186.62 16693.90 15732.40  4991.29   32.00\nTotalSavings       8 1011 30014.26 28636.21 22757.71 25170.77 22164.44 1276.08\nhouseholdSize      9 1011     1.96     0.79     2.00     1.96     1.48    1.00\nhaveKids          10 1011      NaN       NA       NA      NaN       NA     Inf\neducationLevel*   11 1011     2.46     0.93     3.00     2.47     0.00    1.00\ninterestGroup*    12 1011     5.63     2.91     6.00     5.66     4.45    1.00\njoviality         13 1011     0.49     0.29     0.48     0.49     0.37    0.00\nage_group*        14 1011     5.19     2.48     5.00     5.21     2.97    1.00\n                      max     range  skew kurtosis     se\nparticipantId     1010.00   1010.00  0.00    -1.20   9.18\nEducation         1184.87   1184.87  2.23     3.89   9.96\nFood              6889.07   6857.07 -0.95     0.52  51.73\nRecreation       10285.19  10285.19 -0.30    -0.90  81.85\nWage            211734.65 209636.29  1.41     3.81 961.37\nAdjustedShelter  20232.63  20232.63 -0.30    -0.03 118.95\nTotalExpense     32554.69  32522.69 -0.85     0.08 226.02\nTotalSavings    195298.22 194022.14  1.95     5.19 900.62\nhouseholdSize        3.00      2.00  0.06    -1.41   0.02\nhaveKids             -Inf      -Inf    NA       NA     NA\neducationLevel*      4.00      3.00 -0.41    -0.96   0.03\ninterestGroup*      10.00      9.00 -0.07    -1.24   0.09\njoviality            1.00      1.00  0.08    -1.23   0.01\nage_group*           9.00      8.00 -0.05    -1.19   0.08\n\n\n\n\nShow the code\nggplot(data=Merged_table, \n       aes(x= TotalExpense, \n           y= joviality)) +\n  geom_point()    \n\n\n\n\n\n\n\nShow the code\nTotalExpense_lower <- quantile(Merged_table$TotalExpense, 0.13)\n\n\n\n\nShow the code\nMerged_table_filtered <- Merged_table %>%\n  filter(TotalExpense >= TotalExpense_lower)\n\nggplot(data=Merged_table_filtered, \n       aes(x= TotalExpense, \n           y= joviality)) +\n  geom_point()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-Class Exercise 5",
    "section": "",
    "text": "Getting Started\n\npacman::p_load(jsonlite, tidygraph, ggraph, visNetwork, tidyverse)\n\nBelow codes are for the project\n\nMC1 <- jsonlite::fromJSON(\"data/MC1.json\")\n\n\nMC1_nodes <- as_tibble(MC1$nodes) %>%\n  select(id,type,country)\n\n\nMC1_edges <- as_tibble(MC1$links) %>%\n  select(source, target, type, weight, key)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#exploratory-data-visualization",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#exploratory-data-visualization",
    "title": "Take Home Exercise 1",
    "section": "Exploratory Data Visualization",
    "text": "Exploratory Data Visualization\n\n\nShow the code\nggplot(data=Merged_table_filtered, \n             aes(x = joviality)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n\nShow the code\nggplot(data=Merged_table_filtered, \n       aes(y = joviality,       \n           x= haveKids)) +    \n  geom_boxplot()+\n    geom_point(position=\"jitter\", \n             size = 0.5)  +\n    stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4) +\n  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = \"label_repel\", size=3, angle=150)\n\n\n\n\n\n\n\nShow the code\nMerged_table_filtered$householdSize <- as.factor(Merged_table_filtered$householdSize)\n\nggplot(data=Merged_table_filtered, \n       aes(y = joviality,       \n           x= householdSize)) +    \n  geom_boxplot()+\n    geom_point(position=\"jitter\", \n             size = 0.5)  +\n    stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4) +\n  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = \"label_repel\", size=3, angle=150)\n\n\n\n\n\n\n\nShow the code\nggplot(data=Merged_table_filtered, \n       aes(y = joviality, x= age_group)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",\n               fun=\"mean\",\n               colour =\"red\",\n               size=2) +\n  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = \"label_repel\", size=3, angle=150) +\n  labs(y= 'Joviality', x= 'Age Group',\n       title = \"Distribution of Joviality across Age Groups\") +\n  theme(axis.title.y= element_text(angle=0), axis.ticks.x= element_blank(),\n        axis.line= element_line(color= 'grey'))\n\n\n\n\n\n\n\nShow the code\nggplot(data=Merged_table_filtered, \n       aes(y = joviality, x= age_group)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",\n               fun=\"mean\",\n               colour =\"red\",\n               size=2) +\n  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = \"label_repel\", size=3, angle=150) +\n  facet_grid(~ haveKids) +\n  labs(y= 'Joviality', x= 'Age Group',\n       title = \"Distribution of Joviality across Age Groups\") +\n  theme(axis.title.y= element_text(angle=0), axis.ticks.x= element_blank(),\n        axis.line= element_line(color= 'grey'))\n\n\n\n\n\n\n\nShow the code\nggplot(Merged_table_filtered, \n       aes(x = educationLevel, \n           y = joviality)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n    stat_summary(geom = \"point\",\n               fun=\"mean\",\n               colour =\"red\",\n               size=2) +\n  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = \"label_repel\", size=3, angle=150)+\n  coord_flip() +\n  theme_economist()\n\n\n\n\n\n\n\nShow the code\nggplot(Merged_table_filtered, \n       aes(x = interestGroup, \n           y = joviality)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n    stat_summary(geom = \"point\",\n               fun=\"mean\",\n               colour =\"red\",\n               size=2) +\n  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = \"label_repel\", size=3, angle=150)+\n  coord_flip() +\n  theme_economist()\n\n\n\n\n\n\n\nShow the code\nggplot(Merged_table_filtered, \n       aes(x = interestGroup, \n           y = joviality)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n    stat_summary(geom = \"point\",\n               fun=\"mean\",\n               colour =\"red\",\n               size=2) +\n  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = \"label_repel\", size=3, angle=150)+\n  facet_grid(~ haveKids) +\n  coord_flip() +\n  theme_economist()\n\n\n\n\n\nFrom the figure below, we can see that, joviality is directly correlated to TotalExpense and Recreation while negatively correlated with TotalSavings and Wage.\n\n\nShow the code\nggstatsplot::ggcorrmat(\n  data = Merged_table_filtered,\n  cor.vars = c(2:8,13),\n    ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for Merged_table2 dataset\",\n  subtitle = \"Four pairs are no significant at p < 0.05\"\n    )\n\n\n\n\n\n\n\nShow the code\nplot_ly(data = Merged_table_filtered, \n        x = ~joviality, \n        y = ~Recreation, \n        color = ~ educationLevel)\n\n\n\n\n\n\n\n\nShow the code\nplot_ly(data = Merged_table_filtered, \n        x = ~joviality, \n        y = ~Food, \n        color = ~educationLevel)\n\n\n\n\n\n\n\n\nShow the code\nplot_ly(data = Merged_table_filtered, \n        x = ~joviality, \n        y = ~Wage, \n        color = ~educationLevel)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#confirmatory-data-analysis-visualisation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#confirmatory-data-analysis-visualisation",
    "title": "Take Home Exercise 1",
    "section": "Confirmatory Data Analysis Visualisation",
    "text": "Confirmatory Data Analysis Visualisation\n\n\nShow the code\nggbetweenstats(\n  data = Merged_table_filtered,\n  x = haveKids, \n  y = joviality,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\nShow the code\nggbetweenstats(\n  data = Merged_table_filtered,\n  x = householdSize, \n  y = joviality,\n  type = \"np\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\nShow the code\nggbetweenstats(\n  data = Merged_table_filtered,\n  x = educationLevel, \n  y = joviality,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\nShow the code\nggbetweenstats(\n  data = Merged_table_filtered,\n  x = age_group, \n  y = joviality,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\nShow the code\nggbetweenstats(\n  data = Merged_table_filtered,\n  x = interestGroup, \n  y = joviality,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#visualizing-the-uncertainty-of-point-estimates",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#visualizing-the-uncertainty-of-point-estimates",
    "title": "Take Home Exercise 1",
    "section": "Visualizing the uncertainty of point estimates",
    "text": "Visualizing the uncertainty of point estimates\n\n\nShow the code\nMerged_table_filtered %>%\n  ggplot(aes(x = educationLevel, \n             y = joviality)) +\n  stat_pointinterval(\n    aes(interval_color = stat(level)),\n    .width = c(0.95,0.99\n               ),\n    .point = median,\n    .interval = qi,\n    point_color = \"darkred\",\n    show.legend = FALSE) +\n  labs(\n    title = \"Visualising confidence intervals of median joviality score\",\n    subtitle = \"Median Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#two-sample-test",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#two-sample-test",
    "title": "Take Home Exercise 1",
    "section": "Two-Sample Test",
    "text": "Two-Sample Test\nUsing ggbetweenstats() to understand if having kids will make people feel\n\n\nShow the code\nggbetweenstats(\n  data = Merged_table_filtered,\n  x = haveKids, \n  y = joviality,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\nShow the code\nggbetweenstats(\n  data = Merged_table_filtered,\n  x = householdSize, \n  y = joviality,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\nShow the code\nggbetweenstats(\n  data = Merged_table_filtered,\n  x = educationLevel, \n  y = joviality,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\nShow the code\nggbetweenstats(\n  data = Merged_table_filtered,\n  x = age_group, \n  y = joviality,\n  type = \"np\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\nShow the code\nggbetweenstats(\n  data = Merged_table_filtered,\n  x = interestGroup, \n  y = joviality,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\nShow the code\nggplot(Merged_table_filtered, \n       aes(x = educationLevel, \n           y = joviality)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n    stat_summary(geom = \"point\",\n               fun=\"mean\",\n               colour =\"red\",\n               size=2) +\n  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = \"label_repel\", size=3, angle=150)+\n  coord_flip() +\n  theme_economist()\n\n\n\n\n\nFrom the Correlogram below, we have a few observations below,\n\nThere are a few pairs with high collinearity: TotalSavings-Wage, TotalExpense-AdjustedShelter, TotalExpense-Recreation,\nJovaility Score has linear relationships with Wage received, Recreation, Food and Housing Expenses\n\n\n\nShow the code\nggstatsplot::ggcorrmat(\n  data = Merged_table_filtered,\n  cor.vars = c(2:8,13),\n    ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for Merged_table2 dataset\",\n  subtitle = \"Three pairs are no significant at p < 0.05\"\n    )\n\n\n\n\n\n\n\nShow the code\np1 <- ggplot(data=Merged_table_filtered, \n       aes(y = Recreation, x= educationLevel)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",\n               fun=\"mean\",\n               colour =\"red\",\n               size=2) +\n  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = \"label_repel\", size=3, angle=150) +\n  labs(y= 'Recreation Expense', x= 'Educational Level',\n       title = \"Distribution of Recreation Expense by Education Level\") +\n  theme(axis.title.y= element_text(angle=90), axis.ticks.x= element_blank(),\n        axis.line= element_line(color= 'grey'))\n\np2 <- ggplot(data=Merged_table_filtered, \n       aes(y = Food, x= educationLevel)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",\n               fun=\"mean\",\n               colour =\"red\",\n               size=2) +\n  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = \"label_repel\", size=3, angle=150) +\n  labs(y= 'Food Expense', x= 'Educational Level',\n       title = \"Distribution of Food Expense by Education Level\") +\n  theme(axis.title.y= element_text(angle=90), axis.ticks.x= element_blank(),\n        axis.line= element_line(color= 'grey'))\n\np3 <- ggplot(data=Merged_table_filtered, \n       aes(y = AdjustedShelter, x= educationLevel)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",\n               fun=\"mean\",\n               colour =\"red\",\n               size=2) +\n  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = \"label_repel\", size=3, angle=150) +\n  labs(y= 'Housing Expense', x= 'Educational Level',\n       title = \"Distribution of Housing Expense by Educational Level\") +\n  theme(axis.title.y= element_text(angle=90), axis.ticks.x= element_blank(),\n        axis.line= element_line(color= 'grey'))\n\np4 <- ggplot(data=Merged_table_filtered, \n       aes(y = Wage, x= educationLevel)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",\n               fun=\"mean\",\n               colour =\"red\",\n               size=2) +\n  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = \"label_repel\", size=3, angle=150) +\n  labs(y= 'Wage Received', x= 'Educational Level',\n       title = \"Distribution of Wage by Educational Level\") +\n  theme(axis.title.y= element_text(angle=90), axis.ticks.x= element_blank(),\n        axis.line= element_line(color= 'grey'))\n\n\n\n\nShow the code\n(p1/p2)|(p3/p4)\n\n\n\n\n\n\n\nShow the code\nplot_ly(data = Merged_table_filtered, \n        x = ~joviality, \n        y = ~Recreation, \n        color = ~ educationLevel)\n\n\n\n\n\n\n\n\nShow the code\nplot_ly(data = Merged_table_filtered, \n        x = ~joviality, \n        y = ~Food, \n        color = ~educationLevel)\n\n\n\n\n\n\n\n\nShow the code\nplot_ly(data = Merged_table_filtered, \n        x = ~joviality, \n        y = ~AdjustedShelter, \n        color = ~educationLevel)\n\n\n\n\n\n\n\n\nShow the code\nplot_ly(data = Merged_table_filtered, \n        x = ~joviality, \n        y = ~Wage, \n        color = ~educationLevel)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#other-interesting-observations",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#other-interesting-observations",
    "title": "Take Home Exercise 1",
    "section": "Other Interesting Observations",
    "text": "Other Interesting Observations\n\n\nShow the code\nggplot(data=Merged_table_filtered, \n       aes(y = joviality, x= interestGroup)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",\n               fun=\"mean\",\n               colour =\"red\",\n               size=2) +\n  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = \"label_repel\", size=3, angle=150) +\n  labs(y= 'Joviality', x= 'Age Group',\n       title = \"Distribution of Joviality across Age Groups by Kids Status\") +\n  theme(axis.title.y= element_text(angle=0), axis.ticks.x= element_blank(),\n        axis.line= element_line(color= 'grey'))\n\n\n\n\n\n\n\nShow the code\nggplot(data=Merged_table_filtered, \n       aes(y = joviality, x= interestGroup)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",\n               fun=\"mean\",\n               colour =\"red\",\n               size=2) +\n  stat_summary(aes(label = round(after_stat(y), 2)), fun=mean, geom = \"label_repel\", size=3, angle=150) +\n  facet_grid(haveKids ~.) +\n  labs(y= 'Joviality', x= 'Age Group',\n       title = \"Distribution of Joviality across Age Groups by Kids Status\") +\n  theme(axis.title.y= element_text(angle=0), axis.ticks.x= element_blank(),\n        axis.line= element_line(color= 'grey'))"
  }
]